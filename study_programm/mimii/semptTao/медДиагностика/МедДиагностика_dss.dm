definition МедДиагностика;

type ТПол = atom( муж, жен ); /* период */

type Дом_Симптом = string("частые переломы","снижение иммунитета","плохая свертываемость крови","повышенное давление","нарушение сердечного ритма");

type Дом_Ощущениe = string("судороги в мышцах","мышечные боли","онемение и покалывание в конечностях","повышенная возбудимость","непереносимость холода","раздражительность","утомляемость");

type Дом_Фактор = string("черепно-мозговые травмы","избыток фосфора","дефицит витамина D","беременность","лактация","применение мочегонных средств","применение слабительных средств","возраст - больше 40 лет",
"недостаточное потребление зерновых","избыточное потребление газированных напитков","избыточное потребление колбас и консервов","стресс","хроническое перенапряжение","избыточное потребление кофе", "потеря крови");

type Дом_Заболевание = string("аллергия", "гипертония", "дефицит железа", "анемия");

type Дом_Анализ = string("общий анализ крови", "общий анализ мочи", "анализ крови на сахар", "анализ крови на липидный спектр", "микроэлементный анализ волос");

type Элем = atom( Al, As, Be, Br, Bi, Ca, Cd, Co, Cr, Cu, Fe, Hg, I, K, Mg, Mn, Mo, 
                  Na, Ni, P, Pb, Rb, S, Se, Si, Sr, Ti, V, Zn );

type Продукт = string("колбаса", "рыба", "молоко", "творог");



type ТипСредсваЛечения = string("лекарство", "продукт", "процедура", "смена образа жизни" ); 

class ПокАнИз /* показатель анализа или измерения*/
   Название: string;   
   Знач: real := real(0..32000);   
end;

class Показатель
  Название: string;
  ДатаВ: string; /* дата возникновения показтеля */
  Длит : string; /* длительность периода, например, 4 года */
  Тип : atom ( объективный, субъективный );
  Вес : integer := 1; 
end;


class ПСимптом (Показатель)
  Название: Дом_Симптом;
end;

class ПОщущение(Показатель)
  Название: Дом_Ощущениe;
end;

class ПФактор (Показатель)
  Название: Дом_Фактор;
end;

class ПСопутЗабол (Показатель)
  Название: Дом_Заболевание;
end;

class ПАнализ (Показатель)
  Название: Дом_Анализ;
  Тип: atom := объективный;
  ПА :  set of ПокАнИз := ПокАнИз {};
end;


class Заболевание
  Название: string;
  Симпт: set of ПСимптом := ПСимптом {};
  Ощущ: set of ПОщущение := ПОщущение {};
  Факт: set of ПФактор := ПФактор {};
  Ан: set of ПАнализ := ПАнализ {};
  Измер : set of ПокАнИз := ПокАнИз {};
  СопутЗ: set of ПСопутЗабол := ПСопутЗабол {}; /* Сопутствующее заболевание */
  Пок: set of Показатель := Показатель {};
end;

class Пациент
  Фамилия: string;	
  Имя: string;
  Пол: ТПол;
  Дата_рождения: string;
  Болезни: set of Заболевание := Заболевание {};  /* множество болезней в анамнезе */
end;

class Обследование
  Пац: Пациент;
  Пок: set of Показатель := Показатель {};
  Ан: set of ПАнализ := ПАнализ {};
  Измер : set of ПокАнИз := ПокАнИз {};
  ДатаО: string; /* дата обследования */

end;

class Диагноз
  Пац: Пациент;
  Заб: Заболевание;
  Вес: integer:=0;
  ДатаПД: string; /* дата постановки диагноза */
  ПокОб: tuple of string := string[]; /* список показателей для подсистемы объяснений */
end;


class Элементоз (Заболевание)
  Элемент: Элем;
  Статус: atom ( дефицит, избыток);
end;

structure ЗабСх /* схема лечения для заболевания*/
   Ном : integer; /* Номер схемы */
   Заб : Заболевание;
   Оп: string; /* Описание схемы */
end;

class СредствоЛечения
   Название: string;
   Тип: ТипСредсваЛечения;
   Пок: set of ЗабСх  := ЗабСх {};
   ПротПок: set of Заболевание := Заболевание {};  /* список противопоказаний */
end;

end.