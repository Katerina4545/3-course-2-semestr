module tree;

var $sheets : tuple of atom := atom[];
var $trunks : tuple of atom := atom[];
var $crowns : tuple of atom := atom[];
var $sprouts : tuple of atom := atom[];

var $ch : tuple of atom := atom[];

var $win1;
var $wy : integer := 20;



rule сбор_информации
   forall $x: Дерево( листья: $листья, ствол: $ствол, крона: $крона )
=>
   $sheets := $sheets + atom[$листья];
   $trunks := $trunks + atom[$ствол];
   $crowns := $crowns + atom[$крона];
end;

rule сбор_информации_хвойные
   forall $x: Хвойные( побег: $побег )
=>
   $sprouts := $sprouts + atom[$побег];
end;



rule ввод
=>
   var $m1,$m2,$m3,$m4: integer;
   $m1 := Menu(400,50," Выберите листья", $sheets, 1 ); 
   $ch[1]:= $sheets[$m1];
   OutText( $win1, 50, $wy, $ch[1]);
   $wy:=$wy+15;


   $m2 := Menu(400,50," Выберите ствол", $trunks, 1 ); 
   $ch[2]:= $trunks[$m2];
   OutText( $win1, 50, $wy, $ch[2]);
   $wy:=$wy+30;


   $m3 := Menu(400,50," Выберите крону", $crowns, 1 );
   $ch[3]:= $crowns[$m3];
   OutText( $win1, 50, $wy, $ch[3]);
   $wy:=$wy+45;


   $m4 := Menu(400,50," Выберите побег", $sprouts, 1 ); 
   $ch[4]:= $sprouts[$m4];
   OutText( $win1, 50, $wy, $ch[4]);
   $wy:=$wy+60;
end;



//rule Ель
//exist $x: Хвойные( листья:$листьяХ, ствол:$стволХ, крона:$кронаХ, побег:$побегХ)
//	when( $листьяХ = $ch[1] ) & ( $стволХ = $ch[2] ) & ( $кронаХ = $ch[3] ) & ( $побегХ = $ch[4] )
//=>

//   OutText( $win1, 50, $wy, "Это ель");
//   $wy:=$wy+75;
   
//end;



// Правило для остановки
rule Stop
=>
  activate group();
end;

 var $правила : group := group( сбор_информации, сбор_информации_хвойные, ввод, Stop );

begin
  new

	@Ель: Хвойные(листья: игловидные, направлениеРоста: перпендикулярно_стволу, ствол: коричневый, крона: треугольная, пышностьКроны: умеренно_пышная, побег: шишки),

	@Сосна: Хвойные(листья: игловидные, направлениеРоста: перпендикулярно_стволу, ствол: коричневый, крона: округлая, пышностьКроны: умеренно_пышная, побег: шишки),

	@Кедр: Хвойные(листья: игловидные, направлениеРоста: вверх, ствол: коричневый, крона: треугольная, пышностьКроны: не_пышная, побег: шишки),
 
	@Тополь: Широколиственные(листья: овальные_зубчатые, направлениеРоста: вверх, ствол: коричневый, крона: округлая, пышностьКроны: умеренно_пышная, побег: нет ),
    
	@Ива: Широколиственные(листья: вытянутые_гладкие, направлениеРоста: вниз, ствол: коричневый, крона: приплюснутая, пышностьКроны: пышная, побег: нет),

	@Дуб: Широколиственные(листья: вытянутые_волнистые, направлениеРоста: перпендикулярно_стволу, ствол: коричневый, крона: округлая, пышностьКроны: пышная, побег: желуди ),
    
	@Клен: Широколиственные(листья: волнистые_зубчатые, направлениеРоста: перпендикулярно_стволу, ствол: коричневый, крона: округлая, пышностьКроны: пышная, побег: нет ),

	@Каштан: Широколиственные(листья: многолистовой_зубчатый, направлениеРоста: перпендикулярно_стволу, ствол: коричневый, крона: округлая, пышностьКроны: пышная, побег: каштаны),

	@Липа: Широколиственные(листья: овальные_зубчатые, направлениеРоста: перпендикулярно_стволу, ствол: коричневый, крона: округлая, пышностьКроны: пышная, побег: нет),

	@Береза: Широколиственные(листья: овальные_зубчатые, направлениеРоста: перпендикулярно_стволу, ствол: белый_с_полосами, крона: округлая, пышностьКроны: умеренно_пышная, побег: нет);

 
   $win1 := MakeWindow("Вопросно-ответная система 'Деревья' ", 0,0,1010,640);  
   TextColor($win1,4);
   call $правила;

WriteNet();

end.
